/**
 * @file: Root
 * @author: Cuttle Cong
 * @date: 2017/12/4
 * @description:
 */
import React from 'react'
import { observer } from 'mobx-react'
import { action, toJS, computed } from 'mobx'
import FileTree from '@fe/comps/FileTree'
import sio from '@fe/utils/hoc/state-in-out'
import { debounce } from 'lodash'
import { getActiveNode, diff, treeEmbedIdentifier } from '@common/tree-helper'

import State from './State'

@sio(State, 'local')
@observer
export default class Home extends React.Component {
  constructor(props) {
    super(props)
    this.saveTree = debounce(this.saveTree, 2000, { trailing: true })
  }

  @computed get tree() {
    return toJS(this.local.tree)
  }

  @action async saveTree(body) {
    diff(body)
    body = treeEmbedIdentifier(body)
    const { code } = await fetch('/api/fileView/set', {
      method: 'post', body
    })
    if (code === 200) {
      this.local.tree = body
      // console.log(body)
    }
  }

  render() {
    const tree = this.tree
    const activeNode = getActiveNode(tree)
    return (
      <div className="page-home">
        <div className="flex-container">
          <div>
            <FileTree
              activeNode={activeNode}
              tree={tree}
              onChange={data => this.saveTree(data)}
            />
          </div>
          <div>

          </div>
        </div>
      </div>
    )
  }
}
