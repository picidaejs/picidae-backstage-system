/**
 * @file   uncontrolled
 * @author Cuttle Cong
 */

export default function (...values) {
  if (values.length === 0) {
    throw new Error('HOC: uncontrolled need values, like `uncontrolled(\'a\', [\'propName\', \'stateName\'])`')
  }
  return ComponentClass => {
    return class UnControlled extends ComponentClass {
      componentWillReceiveProps(nextProps) {
        const newState = {}
        values.forEach(name => {
          let propName, stateName
          if (Array.isArray(name)) {
            [propName, stateName] = name
          } else {
            propName = stateName = name.toString()
          }
          if (nextProps[propName] !== this.props[propName]) {
            newState[stateName] = nextProps[propName]
          }
        })
        this.setState(newState)

        if (super.componentWillReceiveProps) {
          super.componentWillReceiveProps.apply(this, arguments)
        }
      }

      /*render() {
        if (super.render) {
          return super.render.apply(this, [])
        }
      }*/
    }
  }
}