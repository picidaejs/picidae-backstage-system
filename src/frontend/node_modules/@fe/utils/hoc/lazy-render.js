/**
 * @file: lazy-render
 * @author: Cuttle Cong
 * @date: 2017/12/7
 * @description:
 */

import React, { Component } from 'react'

function lazyRenderHOC(opt = {}, ComponentClass) {
  const { timeout = 800 } = opt
  return class LazyRender extends Component {

    state = {
      hide: true
    }

    componentDidMount() {
      this._t = setTimeout(() => {
        this._t = void 0
        this.setState({ hide: false })
      }, timeout)
    }

    componentWillUnmount() {
      this._t && clearTimeout(this._t)
    }

    render() {
      if (this.state.hide) {
        return null
      }
      return <ComponentClass {...this.props} />
    }
  }
}

export default function (timeout) {
  if (typeof timeout === 'function') {
    return lazyRenderHOC(void 0, timeout)
  }
  return lazyRenderHOC.bind(null, { timeout })
}