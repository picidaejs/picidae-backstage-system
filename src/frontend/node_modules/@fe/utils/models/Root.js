/**
 * @file   Root
 * @author yucong02
 */

import {
  action,
  toJS
} from 'mobx'
import cloneDeep from 'clone-deep'

export default class Root {
  toJSON() {
    return toJS(this)
  }

  @action init() {}
  @action update() {}
  @action exit() {}

  @action
  setValue(key, value) {
    let ref = this
    if (Array.isArray(key)) {
      ref = key
        .slice(0, key.length - 1)
        .reduce((model, k) => {
          return model[k]
        }, this)
      key = key[key.length - 1]
    }
    ref[key] = value
  }

  constructor(init = {}) {
    this.assignShallow(init)
  }

  @action assignShallow(init = {}) {
    init = toJS(init)
    Object.assign(this, init)
    // for (let key in init) {
    //   if (init.hasOwnProperty(key)) {
    //     this[key] = typeof init[key] === 'undefined' ? this[key] : init[key]
    //   }
    // }
  }

  @action assign(init = {}) {
    init = cloneDeep(toJS(init))
    this.assignShallow(init)
  }
}
