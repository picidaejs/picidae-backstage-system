/**
 * @file: index
 * @author: Cuttle Cong
 * @date: 2017/12/13
 * @description: $END$
 */

import React from 'react'
import ACE from 'react-ace'
import PropTypes from 'prop-types'

export { default as getModeFromExtName } from './getModeFromExtName'
export { default as ace, Editor } from 'brace'

// import 'brace/ext/beautify'
// import 'brace/ext/whitespace'

// import 'brace/ext/static_highlight'
// import 'brace/ext/settings_menu'
// import 'brace/ext/error_marker'
// import 'brace/ext/themelist'

// import 'brace/mode/markdown'
// import 'brace/mode/javascript'
// import 'brace/mode/yaml'
// import 'brace/mode/json'
// import 'brace/mode/jsx'

// import 'brace/theme/tomorrow'

// import 'brace/theme/github'

import './style.less'

export default class AceEditor extends React.PureComponent {

  static propTypes = {
    ...ACE.propTypes,
    onChange: PropTypes.func,
    editorProps: PropTypes.object,
    setOptions: PropTypes.object
  }

  static defaultProps = {
    setOptions: {
      autoScrollEditorIntoView: true
    }
  }

  get filterProps() {
    const { editorProps, ...props } = this.props
    if (typeof props.value !== 'string') {
      delete props.value
    }
    if (typeof props.mode !== 'string') {
      delete props.mode
    }
    return {
      editorProps,
      ...props
    }
  }

  render() {
    const { onLoad, editorProps, ...props } = this.filterProps

    return (
      <ACE
        onLoad={editor => {
          editor.setFontSize = (function (method) {
            return function () {
              arguments[0] = parseFloat(arguments[0])
              method && method.apply(editor, arguments)
            }
          })(editor.setFontSize)

          onLoad && onLoad(editor)
        }}
        width={null}
        height={null}
        mode="text"
        theme="github"
        fontSize={14}
        editorProps={{ $blockScrolling: true, ...editorProps }}
        {...props}
      />
    )
  }
}