/**
 * @file: getModeFromExtName
 * @author: Cuttle Cong
 * @date: 2017/12/14
 * @description: 
 */  

const rules = {
  'jsx': 'jsx',
  'javascript': ['js', 'es6'],
  'markdown': ['md', 'markdown'],
  'java': 'java',
  'c_cpp': ['c', 'cpp', 'h'],
  'css': 'css',
  'coffee': 'coffee',
  'batchfile': 'batch',
  'csharp': 'cs',
  'golang': 'go',
  'html': ['html', 'htm'],
  'yaml': ['yaml', 'yml'],
  'json': ['babelrc', 'json', 'eslintrc'],
  'less': ['less'],
  'tsx': 'tsx',
  'typescript': ['ts']
}

let modes = Object.keys(rules)
let rule = {}
modes.forEach(mode => {
  let extNames = rules[mode]
  if (Array.isArray(extNames)) {
    extNames.forEach(extName => {
      if (typeof extName === 'string') {
        rule[extName] = mode
      }
    })
  } else if (typeof extNames === 'string') {
    rule[extNames] = mode
  }
})

function getModeFromExtName(extname = '') {
  if (typeof extname !== 'string') {
    return null
  }

  let i = extname.lastIndexOf('.')
  if (i >= 0) {
    extname = extname.slice(i + 1)
  }
  extname = extname.toLowerCase()
  return rule[extname] || 'text'
}

module.exports = getModeFromExtName